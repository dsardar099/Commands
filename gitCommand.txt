1. git
2. git status
3. git config --global user.name "Deep"
4. git config --global user.email "dsardar@gmail.com"
5. git config --list
6. git config --global code.editor emacs
7. git config --global code.editor vim
8. git config user.name
9. git config user.email
10. git init
11. git add --a
12. git add .
13. git add file_name.extension
14. git commit -m "MESSAGE FOR COMMIT"
15. git log
16. rm -rf .git
17. git clone repository_link new_repository_name
18. touch error.log
19. touch .gitignore
20. git diff => diff btwn staging & working directory
21. git diff --staged => last commit & staging
22. git commit -a -m "DIRECT COMMIT MESSAGE & NO STAGING"
23. git rm file_name.extension => delete file
24. git mv file_old.ext file_new.ext
25. git rm --cached file.ext => remove from tracking
26. git log -p => change occured in previous commits
27. git log -p -2 => show only 2 changes
28. git log --stat => short summary
29. git log --pretty=oneline
30. git log --pretty=short
31. git log --pretty=full
32. git log --since=2.days
33. git log --since=2.weeks
34. git log --since=2.months
35. git log --since=2.years
36. git log --pretty=format:"%h -- %an"
37. git commit --amend => change comments
38. git restore --staged file_name.ext
39. git checkout -- file_name.ext => revert back file content from previous commit
40. git checkout -f => store previous commit in current working directory
41. git remote origin github_url
42. git remote => output -> origin
43. git remote -v
44. git push -u origin master
45. ssh-keygen -t rsa -b 4096 -c "dsardar@gmail.com"
46. eval $(ssh-agent -s)
47. ssh-add ~/ .ssh/id_rsa
48. tail ~/ .ssh/id_rsa.pub (41-48 for github)
49. https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
50. git config --global alias.st status
51. git config --global alias.unstage 'restore --staged --'
52. git checkout -b branch_name
53. git checkout master => switching branch to master
54. git branch => show all branch
55. git merge branch_name
56. git branch -v => show last commit of each brunch
57. git branch --merged => show all branch merged
58. git branch --no-merged => not merged branch
59. git branch -d branch_name => delete branch & gives error if branch is not merged
60. git branch -D branch_name => delete branch & dont gives error if branch is not merged
61. git push origin branch_name => push branch to github( for this firstly switch to this branch in local git)
62. git push origin branch_name:new_branch_name => push branch to github( for this firstly switch to this branch in local git)
63. git push -d origin branch_name => delete branch from github



INSIDE .gitignore
error.log => file
*.log => all file with extension .log
dir/ => all directory with name dir
/dir/ => directory name with dir in main directory
temp/dir => direcrory named dir inside temp